.hd ar 1
maintain archive files
.sy
ar {-{u|x|t|d|p}[v][r]}
.cu
archive-file
.ul
[file ...]
.ds
.I ar
collects text files into one big file and
maintains that file as an archive.
Files can be extracted from, added to,
deleted from, or replaced in the archive,
and information about the contents can be listed.
.LP
Archives are useful for keeping collections of related files together.
They provide an easy way to make and maintain backups.
In addition, a collection of files in an archive takes less disk
space that is used by the individual files.
.LP
Files that are added to archives can, of course, be archive files
themselves.  Theoretically, there is no limit to the number
of files that can be nested this way.
Thus,
.I ar
provides the utility necessary to maintain tree-structured
file directories.
.LP
The optional file names in the
.I ar
statement line specify individual files that are to participate in the action.
If no files are named, the
.I ar
command is performed on all of the files in the
archive; but if any files are explicitly named, they are the
.B only
files upon which the command is performed.  The exception is the delete (d)
option for which
.B all
of the files to be deleted must be specified.
Therefore, if you wish to delete all of the files in an archive, it is easiest
to remove
the whole archive using
.I rm.
.LP
Files that are to be added to an archive must exist as and be stored as
files with the name given.  Files that are extracted from
an archive will be put onto files with the name given.
.LP
If a dash (-) is given as a file name,
further file names are read from the standard input,
one per line.
.H2 Option Summary
.SP
-u Create, update or add to an archive.
Creates a new archive if
.I archive-file
does not exist,
replaces files that already exist
in the archive with updated versions or
adds new files to the end of the archive.
In all cases the file name(s) referenced in the
.I ar
statement and the name(s) of the regular file(s)
must be the same.
If the verbose (v) option is also used,
the file names will be printed on the
standard output as they are written to the archive file.
.IP
-x Extract file(s) from an archive.
The specified file(s) are copied from
the archive onto regular files using
the name referenced in the
.I ar
statement.
If the verbose (v) option is added,
the file names will be printed on the
standard output as they are extracted.
.IP
-d Delete file(s) from an archive.
Only the file(s) specified in the
.I ar
statement will be deleted.
If the verbose (v) option is added,
the file names will be printed on
the standard output as they are deleted from the archive.
.IP
-p Print file(s) on standard output.
Using the verbose (v) option will
cause the file name to be printed before
the file.
.IP
-t Print an archive table of contents.
Normally, the table will contain only the file name(s).
If the verbose (v) option is added, the table will also contain
each file's length, type, and date and time of last change.
.IP
-r Read a (possibly) damaged archive.
This option causes the archiver to try harder than usual
to read a spoiled archive.
(Editing an archive can spoil its format.
Some other archivers create archives in formats that this
archiver has trouble reading.)  Archives created
or updated by this archiver will not need this special
handling unless they are later spoiled.
.IP
-v Make output verbose.
This option may be concatenated to any of the above option
and will cause the archiver to print additional
information--generally file names--on the standard output.
Its specific action when concatenated with each option
has already been described.
.CI
This version of
.I ar
creates archives having headers and trailers.
Each header records the file size in
a format peculiar to this archiver and to
its implementation on the native operating system.
Other archivers attempting to read these archives should
ignore the file sizes and use only the header-trailer pairs
to delimit the elements.
.LP
This version uses the file size (if any) recorded
in the header, and reports resulting discrepancies.
The
.B -r
option forces it to ignore recorded sizes
and to rely strictly on header-trailer matchups to delimit
elements when reading an archive.
In any event, it is assumed that either ALL or NONE of the
elements in an archive carry a trailer, and exceptions are
treated as format errors.
.ex
.SP
ar -u book chap1 chap2 chap3
.br
Create or update an archive file called
.I book
and insert or update 3 members
in it --
.I chap1,
.I chap2,
and
.I chap3
.IP
ar -xv source rtnA rtnB
.br
From the archive file
.I source,
extract the members
.I rtnA
and
.I rtnB
and put them onto files
with the same name.
Print the member names as they are extracted.
.IP
ar -t library
.br
List all the members of
.I library.
.IP
ar -p book | format
.br
Send all members of the archive
.I book
to
the formatter.
.IP
ar -uv somefile a b c | rm -
.br
Add or update in archive
.I somefile
members
.I a,
.I b
and
.I c,
and then delete
.I a,
.I b
and
.I c
from the file system (but not from
.I somefile).
.IP
ls | ar -uv a:archive -
.br
Updates and/or adds all of the files in the
current working directory to
.I archive
in drive
.I a.
The file names are displayed on standard output as the files
are processed.
.IP
ar -uvr arc one
.br
Insert
.I one
into archive file
.I arc
while ignoring (and correcting) some of the (possibly invalid) archive
format information in
.I arc.
.fl
.C arctemp.$$$
is created and subsequently deleted for each run.
.sa
.49
.SP
.ST
pages 85-103
.di
.SP
archive not in proper format
.br
.I ar
did not find a header
line where one was expected.
Typical reasons include misspelling the file name,
using an existing file not in archive format
on a creation run, and
referencing an archive file that has been modified
directly (say with the editor).
For the latter case try again using the
.B -r
option, or try reading the archive with the old archiver,
.I oldar.
.IP
archive integrity in doubt - missing trailer
.br
Some archives (including all those produced by this version
of the archiver)
terminate each file by a special line called a
"trailer".
This message is caused by the lack of a trailer line when one
was expected.
This archiver can read old-style archives
which lack trailers.
However,
if
.I any
archive element is found to have a trailer, then this
archiver reports an error unless
.I all
elements have a proper
trailer.
.IP
binary element, can't handle
.SP
binary file, can't handle
.br
This version of the archiver isn't built to handle binary
files, and it distrusts archive elements marked "binary".
.IP
can't rename/move temp file
.br
The scratch file named was successfully generated
but could not be renamed or copied to its final destination.
Possibly there isn't enough room for the new file, or there
is some other file system problem.
.IP
ctosek:  invalid seek offset
.br
This indicates a logical error in the portion of code which
extracts seek offsets from header records.
.IP
delete by name only
.br
For user protection files are allowed to be deleted from an archive
only by specifying each file name to be deleted.
.IP
duplicate file name
.br
A file was listed more than once when calling
.I ar.
.IP
error in main:  can't happen
.br
This indicates a logical error in the portion of
code in the main program that
parses the command line.
.IP
fatal errors -- archive not altered
.br
This message is generated whenever one or more of the other
errors have been detected.  An archive is never altered unless
.B everything
has run properly.
.IP
too many file names
.br
.I ar
may not be called with more than
the number of files specified by MAXFILES in the source code.
.IP
unexpected end of archive file
.br
The last element in the archive had a size recorded,
but the archive ended before the whole element was read.
This may reflect a truncated archive or an incorrect notation
of file size.
Try the
.B -r
option to aid reading the archive:  if it works,
then the cause was the latter.
.IP
.I filename: 
can't add
.br
The file specified by
.I filename
does not exist or cannot be
opened (e.g., is locked).
.IP
.I filename: 
can't create
.br
The archiver could not generate a local file by the name
of
.I filename.
Probably the archiver's internal file
buffer space has been exceeded.
.IP
.I filename: 
can't position new header
.SP
.I filename: 
inconsistent seek offsets
.br
The archiver was navigating around an existing archive or
the scratch file using seek offsets, and detected a mistake.
This is a profound malfunction, probably reflecting a coding
error.
.IP
.I filename: 
missing size
.br
After processing an archive element without a trailer,
this archiver insists that
.B all
elements in this archive
must lack trailers, and therefore that they must have
proper sizes recorded.
But now it has found an element with no size recorded.
This can result from concatenating archives of differing
styles, or from otherwise monkeying with archive internals.
.IP
.I filename: 
not in archive
.br
.I ar
could not locate the file indicated by
.I filename
in the specified archived file.
.bu
Only
.B text
files (i.e. not binary files such as compiled programs)
can be archived.
.LP
When the update (-u) and (-p) options are used the files
are updated or printed in the order they appear
on the archived file,
.B not
the order listed on the
.I ar
statement line.
