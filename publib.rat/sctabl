## sctabl - scan symbol table, returning next entry or EOF

   integer function sctabl (table, sym, info, posn)
   pointer table, posn
   character sym (ARB)
   integer info (ARB)
   integer unpack, ilen
   pointer bucket, walker
   pointer dsget
   integer i
   integer nodsiz, j
   DS_DECL(Mem, 1)

   if (posn == 0) {                 # just starting scan?
      posn = dsget (2)                 # get space for position info
      Mem (posn) = 1                   # get index of first bucket
      Mem (posn + 1) = Mem (table + 1) # get pointer to first chain
      }

   bucket = Mem (posn)              # recover previous position
   walker = Mem (posn + 1)
   nodsiz = Mem (table)

   repeat		# until the next symbol, or none are left
	{
     	if (walker != LAMBDA)        # symbol available?
		{
		j = walker + ST_DATA
 		i = unpack(Mem(j), sym)
		j = j + ilen(sym)
		if (nodsiz == CHAR_DEFN)
			i = unpack (Mem(j), info)
		else			#pick up integers
			{
			for (i=1; i<= nodsiz; i=i+1)
				{
				info(i) = Mem(j)
				j = j + 1
				}
			}

         Mem (posn) = bucket        # save position of next symbol
         Mem (posn + 1) = Mem (walker + ST_LINK)
         sctabl = 1  # not EOF
         return
         }
      else {
         bucket = bucket + 1
         if (bucket > ST_HTABSIZE)
            break
         j = table + bucket
         walker = Mem (j)
         }
      }

   call dsfree (posn)      # throw away position information
   posn = 0
   sctabl = EOF
   return
   end
