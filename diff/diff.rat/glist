# gen_listing --- generate a full listing of changes to a file

   subroutine gen_listing

   include cdiff

   sym_pointer oi, ni

   integer junk
   integer getlin

   character line (MAXLINE)

   string nbar "n|"
   string ci1 "ci "
   string ci5 "ci     "
   string obar "o|"
   string cd "cd"
   string b5bar "     |"
   string blankd " d"
   string bib " i "
   string bi5 " i     "

   oi = 2
   ni = 2

   repeat

      if (Old_count (oi) == 0 & New_count (ni) == 0) {
         if (Verbos == YES)
            call putch (NEWLINE, STDOUT)
         while (Old_count (oi) == 0 & New_count (ni) == 0) {
            junk = getlin (line, Old_copy)
            if (Verbos == YES) {
               call putint (oi - 1, 7, STDOUT)
               call putint (ni - 1, 5, STDOUT)
               call putlin (line, STDOUT)
               }
            junk = getlin (line, New_copy)
            oi = oi + 1
            ni = ni + 1
            }
         }

      else if (Old_count (oi) ~= 1 & New_count (ni) == 1) {
         call putch (NEWLINE, STDOUT)
         for (; New_count (ni) == 1; ni = ni + 1) {
            junk = getlin (line, New_copy)
            if (Verbos == YES) {
               call putlin (bi5, STDOUT)
               call putint (ni - 1, 5, STDOUT)
               call putch (BAR, STDOUT)
               }
            else {
               call putlin (bib, STDOUT)
               call putint (ni - 1, 4, STDOUT)
               call putlin (nbar, STDOUT)
               }
            call putlin (line, STDOUT)
            }
         }

      else if (Old_count (oi) == 1 & New_count (ni) ~= 1) {
         call putch (NEWLINE, STDOUT)
         for (; Old_count (oi) == 1; oi = oi + 1) {
            junk = getlin (line, Old_copy)
            if (Verbos == YES) {
               call putlin (blankd, STDOUT)
               call putint (oi - 1, 5, STDOUT)
               call putlin (b5bar, STDOUT)
               }
            else {
               call putlin (blankd, STDOUT)
               call putint (oi - 1, 5, STDOUT)
               call putlin (obar, STDOUT)
               }
            call putlin (line, STDOUT)
            }
         }

      else if (Old_count (oi) == 1 & New_count (ni) == 1) {
         call putch (NEWLINE, STDOUT)
         for (; Old_count (oi) == 1; oi = oi + 1) {
            junk = getlin (line, Old_copy)
            if (Verbos == YES) {
               call putlin (cd, STDOUT)
               call putint (oi - 1, 5, STDOUT)
               call putlin (b5bar, STDOUT)
               }
            else {
               call putlin (cd, STDOUT)
               call putint (oi - 1, 5, STDOUT)
               call putlin (obar, STDOUT)
               }
            call putlin (line, STDOUT)
            }
         call putch (NEWLINE, STDOUT)
         for (; New_count (ni) == 1; ni = ni + 1) {
            junk = getlin (line, New_copy)
            if (Verbos == YES) {
               call putlin (ci5, STDOUT)
               call putint (ni - 1, 5, STDOUT)
               call putch (BAR, STDOUT)
               }
            else {
               call putlin (ci1, STDOUT)
               call putint (ni - 1, 4, STDOUT)
               call putlin (nbar, STDOUT)
               }
            call putlin (line, STDOUT)
            }
         }

      else if (Old_count (oi) == 2 & New_count (ni) == 2)
         break

   return
   end
